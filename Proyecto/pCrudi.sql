-- Paquetes


-- Paquete para Servicios Medicos

CREATE OR REPLACE PACKAGE BODY PC_SERVICIOSMEDICOS IS

    PROCEDURE AD_SERVICIOSMEDICOS (XtipoServicio IN varchar, Xcosto in number, XveterinarioTID in varchar, XveterinarioNumID in number, Xestado in varchar) IS
    BEGIN
    INSERT INTO SERVICIOSMEDICOS(tipoServicio,costo,veterinarioTID, veterinarioNumID, estado) VALUES(XtipoServicio, Xcosto, XveterinarioTID, XveterinarioNumID, Xestado);
    COMMIT;
            EXCEPTION
            WHEN OTHERS THEN
                ROLLBACK;
                raise_application_error(-20001, 'NO SE PUDO INSERTAR EN SERVICIOS MEDICOS');
    END;
    
    PROCEDURE AD_TOMA_SERVICIOMEDICO(XSMID IN NUMBER, XMID IN NUMBER) IS
    BEGIN
        INSERT INTO TOMASERVICIOMEDICO VALUES(XSMID,XMID);
        COMMIT;
            EXCEPTION
            WHEN OTHERS THEN
                ROLLBACK;
                raise_application_error(-20001, 'NO SE PUDO INSERTAR EN TOMA SERVICIOS MEDICOS');
    END;
    
    PROCEDURE EL_SERVICIOSMEDICOS (XSMID number) IS
    BEGIN
    DELETE FROM TOMASERVICIOMEDICO WHERE SERVICIOMEDICO = XSMID;
    DELETE FROM SERVICIOSMEDICOS WHERE SMID = XSMID;
    COMMIT;
            EXCEPTION
            WHEN OTHERS THEN
                ROLLBACK;
                raise_application_error(-20001, 'NO SE PUDO ELIMINAR SERVICIOS MEDICOS');
    END;
    
    FUNCTION CO_SERVICIOSMEDICOS (XMID IN NUMBER) return SYS_REFCURSOR IS CO_SE SYS_REFCURSOR;
    BEGIN
        OPEN CO_SE FOR
            SELECT * FROM SERVICIOSMEDICOS JOIN TOMASERVICIOMEDICO ON SERVICIOSMEDICOS.SMID = TOMASERVICIOMEDICO.SERVICIOMEDICO WHERE MASCOTAID = XMID;
        RETURN CO_SE;
    END;
END;
/

-- Paquete para Servicios SPA

CREATE OR REPLACE PACKAGE BODY PC_SERVICIOSSPA IS

    PROCEDURE AD_SERVICIOSSPA (XtipoSpa IN varchar, Xcosto IN number,Xestado IN varchar, Xfecha IN Date)IS
    BEGIN
    INSERT INTO SERVICIOSSPA(tipoSpa, costo,estado, fecha) VALUES(XtipoSpa, Xcosto,Xestado, Xfecha);
    COMMIT;
            EXCEPTION
            WHEN OTHERS THEN
                ROLLBACK;
                raise_application_error(-20001, 'NO SE PUDO INSERTAR EN SERVICIOS SPA');
    END;
    PROCEDURE AD_TOMA_SERVICIOSPA(XSSID IN NUMBER, XMID IN NUMBER) IS 
    BEGIN
        INSERT INTO TOMASERVICIOSPA VALUES(XSSID,XMID);
        COMMIT;
            EXCEPTION
            WHEN OTHERS THEN
                ROLLBACK;
                raise_application_error(-20001, 'NO SE PUDO INSERTAR EN TOMA SERVICIOS SPA');
    END;
    PROCEDURE EL_SERVICIOSSPA (XSSID number) IS
    BEGIN
    DELETE FROM TOMASERVICIOSPA WHERE SERVICIOSPA = XSSID;
    DELETE FROM SERVICIOSSPA WHERE SSID = XSSID;
    COMMIT;
            EXCEPTION
            WHEN OTHERS THEN
                ROLLBACK;
                raise_application_error(-20001, 'NO SE PUDO ELIMINAR SERVICIOS SPA');
    END;
    
    FUNCTION CO_SERVICIOSSPA (XMID IN NUMBER) return SYS_REFCURSOR IS CO_SPA SYS_REFCURSOR;
    BEGIN
        OPEN CO_SPA FOR
            SELECT * FROM SERVICIOSSPA JOIN TOMASERVICIOSPA ON SERVICIOSSPA.SSID = TOMASERVICIOSPA.SERVICIOSPA WHERE MASCOTAID = XMID;
        RETURN CO_SPA;
    END;
END;
/


-- Paquete para Productos
/*
CREATE OR REPLACE PACKAGE PC_PRODUCTOS IS

    PROCEDURE AD_PRODUCTOS (PID IN number, costo IN number, informacion IN XMLTYPE);
    PROCEDURE MOD_PRODUCTOS(PID IN number, costo IN number, informacion IN XMLTYPE);
    PROCEDURE EL_PRODUCTOS (PID IN number, costo IN number, informacion IN XMLTYPE);
    
    FUNCTION CO_PRODUCTOS return SYS_REFCURSOR;
END;
/